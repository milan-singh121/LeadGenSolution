# This is the full and correct specification for your application.
# It defines the UI, the background worker, and the database connection.
name: leadgen-pipeline-app
region: ams # Using your specified region

# Define the services (components) of your application
services:
  - name: leadgen-ui
    # This is your Streamlit web service
    git:
      repo: milan-singh121/LeadGenSolution
      branch: main
    # âœ… FIX: Using the most explicit run command to force the correct port and address.
    # This tells Streamlit to listen on port 8080 on all available network interfaces.
    run_command: streamlit run streamlit_app.py --server.port 8080 --server.address 0.0.0.0
    http_port: 8080
    instance_count: 1
    instance_size_slug: basic-xxs
    # Define environment variables for the UI service
    envs:
      # The STREAMLIT_SERVER_PORT key is removed as the run_command is more explicit.
      - key: MONGO_URI
        value: "${mongo.MONGO_URI}" # Securely references the app-level variable
        scope: RUN_TIME
      - key: MONGO_DB_NAME
        value: "LeadGen_Test"
        scope: RUN_TIME
      - key: REDIS_BROKER_URL
        value: "${redis-broker.INTERNAL_URL}" # Securely connects to the managed Valkey
        scope: RUN_TIME
      # All other necessary keys for the UI to function
      - key: SNOV_CLIENT_ID
        value: "${SNOV_CLIENT_ID}"
        type: SECRET
      - key: SNOV_CLIENT_SECRET
        value: "${SNOV_CLIENT_SECRET}"
        type: SECRET
      - key: AWS_ACCESS_KEY
        value: "${AWS_ACCESS_KEY}"
        type: SECRET
      - key: AWS_SECRET_KEY
        value: "${AWS_SECRET_KEY}"
        type: SECRET
      - key: AWS_REGION
        value: "us-east-1"
        scope: RUN_TIME
      - key: RAPID_API_KEY
        value: "${RAPID_API_KEY}"
        type: SECRET
      - key: OPENAI_API_KEY
        value: "${OPENAI_API_KEY}"
        type: SECRET

  - name: leadgen-worker
    # This is your Celery worker
    git:
      repo: milan-singh121/LeadGenSolution
      branch: main
    run_command: celery -A tasks worker --loglevel=info
    instance_count: 1
    instance_size_slug: basic-xs
    # The worker needs all the same secrets to run the pipeline
    envs:
      - key: MONGO_URI
        value: "${mongo.MONGO_URI}"
        scope: RUN_TIME
      - key: MONGO_DB_NAME
        value: "LeadGen_Test"
        scope: RUN_TIME
      - key: REDIS_BROKER_URL
        value: "${redis-broker.INTERNAL_URL}"
        scope: RUN_TIME
      - key: RAPID_API_KEY
        value: "${RAPID_API_KEY}"
        type: SECRET
      - key: SNOV_CLIENT_ID
        value: "${SNOV_CLIENT_ID}"
        type: SECRET
      - key: SNOV_CLIENT_SECRET
        value: "${SNOV_CLIENT_SECRET}"
        type: SECRET
      - key: AWS_ACCESS_KEY
        value: "${AWS_ACCESS_KEY}"
        type: SECRET
      - key: AWS_SECRET_KEY
        value: "${AWS_SECRET_KEY}"
        type: SECRET
      - key: AWS_REGION
        value: "us-east-1"
        scope: RUN_TIME
      - key: OPENAI_API_KEY
        value: "${OPENAI_API_KEY}"
        type: SECRET

# It links your app to the managed database you created.
databases:
  - name: redis-broker
    engine: VALKEY
    production: true
    # Ensure this name EXACTLY matches the name of your Valkey cluster in the DO dashboard
    cluster_name: "leadgen-broker"

# It defines placeholders for your secrets, which you will fill in the UI.
vars:
  - key: mongo.MONGO_URI
    value: "YOUR_MONGODB_ATLAS_CONNECTION_STRING"
    type: SECRET
  - key: RAPID_API_KEY
    value: ""
    type: SECRET
  - key: SNOV_CLIENT_ID
    value: ""
    type: SECRET
  - key: SNOV_CLIENT_SECRET
    value: ""
    type: SECRET
  - key: AWS_ACCESS_KEY
    value: ""
    type: SECRET
  - key: AWS_SECRET_KEY
    value: ""
    type: SECRET
  - key: OPENAI_API_KEY
    value: ""
    type: SECRET
